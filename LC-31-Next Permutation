func nextPermutation(_ nums: inout [Int]) {
        // first point which is smaller
    var count = nums.count
    var idx = count - 1
    while idx > 0 {
        if nums[idx] > nums[idx - 1] {
            break
        }
        idx -= 1
    }
    if idx <= 0 {
        // no number possible
        nums.reverse()
        return 
    }
    idx -= 1
    // find smallest next greater element after idx and swap it with idx
    var nextSmallestIndex = idx + 1
    for index in idx+1 ..< count {
        if nums[index] > nums[idx] {
            if nums[index] <= nums[nextSmallestIndex] {
                nextSmallestIndex = index
            }
        }
    }
    // swap next smallest and idx
    var temp = nums[idx]
    nums[idx] = nums[nextSmallestIndex]
    nums[nextSmallestIndex] = temp
    // reverse sub array from idx + 1
    var i = idx+1
    var j = count - 1
    while i < j {
        var temp = nums[i]
        nums[i] = nums[j]
        nums[j] = temp
        i += 1
        j -= 1
    }
    }
