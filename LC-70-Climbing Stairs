func climbStairs(_ n: Int) -> Int {
       var memo: [Int] = Array(repeating: -1, count: n+1)
    climb(n: n, memo: &memo)
    
    return memo[n]
    }

    func climb(n: Int, memo: inout [Int]) -> Int {
    if n < 0 {
        return 0
    } else if n == 0 {
        return 1
    } else if memo[n] != -1 {
        return memo[n]
    } else {
        let sum = climb(n: n-1, memo: &memo) + climb(n: n-2, memo: &memo)
        memo[n] = sum
        return sum
    }
}
