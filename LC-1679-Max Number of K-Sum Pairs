func maxOperations(_ nums: [Int], _ k: Int) -> Int {
    var dict: [Int: Int] = [:]
    for num in nums {
        if let numCount = dict[num] {
            // number exists
            dict[num] = numCount + 1
        } else {
            // new entry
            dict[num] = 1
        }
    }
    print(dict)
    var pairCount = 0
    for num in nums {
        //print("num: \(num), dict \(dict)")
        if let numCount = dict[num],
           let diffCount = dict[k - num],
           numCount > 0,
           diffCount > 0 {
            // pair exists
            if num == (k-num) && numCount > 1 {
                // repeated number
                pairCount += 1
                dict[num] = numCount - 2

            } else if num != (k-num) {
                pairCount += 1
                dict[num] = numCount - 1
                dict[k - num] = diffCount - 1
            }
        }
    }
    return pairCount
}

print(maxOperations([3,1,3,4,3], 6))
// [1,3,3,3,4]
