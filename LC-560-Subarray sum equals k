https://leetcode.com/problems/subarray-sum-equals-k/description/

func subarraySum(_ nums: [Int], _ k: Int) -> Int {
    var count = 0
    var sum = 0
    var dict: [Int: Int] = [:]
    for i in 0 ..< nums.count {
        sum += nums[i]
         if sum == k {
            count += 1
            //dict[sum] = i
        }
        if let cnt = dict[sum - k] {
            // idx to i is k
            count += cnt
        }
        if let cnt = dict[sum] {
            dict[sum] = cnt + 1
        } else {
            dict[sum] = 1
        }
        
    }
    return count
}

print(subarraySum([0,0,0,0,0], 0))
/**
 [3, 0, -1, -2, 3, 0, -2]
 Input: nums = [1,2,3], k = 3
 Input: nums = [1,1,1], k = 2
 
 0: 2
 */
